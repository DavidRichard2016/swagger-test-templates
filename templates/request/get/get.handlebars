  it('should respond with {{description}}', function(done) {
      {{#unless noSchema}}
      /*eslint-disable*/
      {{> schema-partial this}}

      /*eslint-enable*/
      {{/unless}}
      request({
        url: '{{path}}',
        {{#if queryParameters}}
        qs: {
        {{#each queryParameters}}
        {{this.name}}: 'DATA GOES HERE'{{#unless @last}},{{/unless}}
        {{/each}}
        },
        {{/if}}
        method: 'GET',
        headers: {
          'Content-Type': '{{contentType}}'{{#if headerParameters}},
          'Custom-Header': {
          {{#each headerParameters}}
          {{this.name}}: 'DATA GOES HERE'{{#unless @last}},{{/unless}}
          {{/each}} }{{/if}}
        }
      },
      function(error, res, body) {
        if (error) {
          done(error);
          return;
        }
        {{#if noSchema}}
        {{#is ../assertion 'expect'}}
        expect(body).to.equal(null);
        {{/is}}
        {{#is ../assertion 'should'}}
        body.should.equal(null);
        {{/is}}
        {{#is ../assertion 'assert'}}
        assert.isNull(body);
        {{/is}}
        {{/if}}
        {{#unless noSchema}}
        {{#is ../assertion 'expect'}}
        expect(validator.validate(body, schema)).to.be.true;
        {{/is}}
        {{#is ../assertion 'should'}}
        validator.validate(body, schema).should.be.true;
        {{/is}}
        {{#is ../assertion 'assert'}}
        assert.true(validator.validate(body, schema));
        {{/is}}
        {{/unless}}
        done();
      });
    });
